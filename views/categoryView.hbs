<!--categoryView.hbs-->
<div class="category-screen">
    <div class="back-btn">
      <a href="/" class="back-btn">
      <img src="/images/icons8-back-64.png" alt="Back" />
      </a>
    </div>

    <div class="category-details">
        <img src="{{metadata.icon}}" alt="" id="category-img">
        <div class="details">
            <h1>{{metadata.name}}</h1>
            <p><span class="total-tasks">{{tasks.length}}</span> tasks</p>
        </div>
    </div>


    <div class="x-tasks">
    {{#each tasks}}
    <div class="x-task" data-id="{{_id}}" data-checked="{{completed}}">
      <div class="x-row">
        <span class="checkbox">
          <img src="/images/icons8-check-64.png" onclick="toggleTaskCompletion(event)" taskId="{{_id}}" alt="">
        </span>
        <div id="TitleErrormessage" style="display:none">title is mandatory</div>

        <input type="text" value="{{title}}" taskId="{{_id}}" onblur="updateTaskTitle(event)"></input>
        
        <div class="x-delete" taskId="{{_id}}" onclick="deleteTask(event)">

      
          <img src="/images/icons8-trash-64.png" alt="trash">
        </div>
      </div>
      <div class="x-details">

        {{#if description}}
        <p><strong>Description: </strong>
        <br>
        <input type="text" value="{{description}}" taskId="{{_id}}" onblur="updateTaskDetails(event)"></p>
        {{/if}}

        {{#if dueDate}}
        <p> <strong>Due Date: </strong>
        <br>
        {{dueDate}} 
        <br>
        <input type="date"  taskId="{{_id}}" onblur="updateTaskDueDate(event)"></p>
        {{/if}}

        {{#if priority}}
        <p><strong>Priority: </strong>{{priority}} 
              <select taskId="{{_id}}" name="priority" class="form-select" onblur="updateTaskPriority(event)">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
              </select>
        </p>
        {{/if}}

        {{#if category}}
        <p><strong>Category: </strong>{{category}}
          <select taskId="{{_id}}" name="{{category}}" class="form-select" onblur="updateTaskCategory(event)">
           <option value="Personal">Personal</option>
           <option value="Health">Health</option>
           <option value="Work">Work</option>
           <option value="Home">Home</option>
           <option value="Shopping">Shopping</option>
           <option value="Education">Education</option>
           <option value="Finances">Finances</option>
          </select>
        </p>
        {{/if}}

      </div>
    </div>
    {{/each}}
  </div>

        <!--ADD TASK BUTTON-->

   <button id="open-modal-button" class="add-task-button" data-bs-toggle="modal" data-bs-target="#task-modal">
     <img src="/images/icons8-plus-50.png" alt="">
   </button>

        <!--ADD TASK FORM-->
  <div class="modal fade" id="task-modal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="taskModalLabel">Create a New Task</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
       </div>
       
       <div class="modal-body">
          <form id="task-form" name="task-form" method="POST" action="/">
            <div class="mb-3 form-group">
              <label for="title" class="form-label">Title:</label>
              <input type="text" id="title" name="title" class="form-control" required/>
              <label for="Title Error Message" hidden="true"></label>
            </div>


            <div class="mb-3" id="description-container">
              <label for="description" class="form-label">Description:</label>
              <textarea id="description" name="description" class="form-control" rows="4"></textarea>
            </div>

            <div class="mb-3">
              <label for="due-date" class="form-label">Due Date:</label>
              <input type="date" id="due-date" name="due-date" class="form-control" />
            </div>

            <div class="mb-3">
              <label for="priority" class="form-label">Priority:</label>
              <select id="priority" name="priority" class="form-select">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
              </select>
          </div>

          <div class="mb-3">
             <label for="category" class="form-label">Category Tag:</label>
             <select id="category" name="category" class="form-select">
                <option value="Personal">Personal</option>
                <option value="Health">Health</option>
                <option value="Work">Work</option>
                <option value="Home">Home</option>
                <option value="Shopping">Shopping</option>
                <option value="Education">Education</option>
                <option value="Finances">Finances</option>
             </select>
           </div>

          <button type="submit" class="btn btn-primary" onclick="validateForm(event)">Create Task</button>
        </form>
      </div>
    </div>
  </div>
</div>
</div>
<script>


//UPDATE TITLE
function updateTaskTitle(event) {

      const id = event.target.attributes.taskid.nodeValue;
      const title = event.target.value;
      if(title==""){
        document.getElementById('TitleErrormessage').style.display="block";
        return false;
      }
      const payload = { title }

      fetch(`/task/${id}`, {
        headers: {
          'Content-Type': "application/json"
        },
        method: "PATCH",
        body: JSON.stringify(payload)
      }).then(() => location.reload());
    }

//UPDATE DESCRIPTION
function updateTaskDetails(event) {

  const id = event.target.attributes.taskId.value;
  const description = event.target.value;
  const payload = { description };

  fetch(`/task/${id}`, {
    headers: {
      'Content-Type': 'application/json',
    },
    method: 'PATCH',
    body: JSON.stringify(payload),
  }).then(() => location.reload());
}

//UPDATE DUEDATE
function updateTaskDueDate(event) {

  const id = event.target.attributes.taskId.value;
  const dueDate = event.target.value;
  const payload = { dueDate };

  fetch(`/task/${id}`, {
    headers: {
      'Content-Type': 'application/json',
    },
    method: 'PATCH',
    body: JSON.stringify(payload),
  }).then(() => location.reload());
}

//UPDATE PRIORITY
function updateTaskPriority(event) {
  const id = event.target.attributes.taskId.value;
  const selectElement = event.target;
  const newPriority = selectElement.value;

  const payload = { priority: newPriority };

  fetch(`/task/${id}`, {
    headers: {
      'Content-Type': 'application/json',
    },
    method: 'PATCH',
    body: JSON.stringify(payload),
  }).then(() => location.reload());
}

//UPDATE CATEGORY
function updateTaskCategory(event) {

  const id = event.target.attributes.taskId.value;
  const category = event.target.value;
  const payload = { category };

  fetch(`/task/${id}`, {
    headers: {
      'Content-Type': 'application/json',
    },
    method: 'PATCH',
    body: JSON.stringify(payload),
  }).then(() => location.reload());
}

 //VALIDATE FORM
function validateForm(event) {
    const titleInput = document.getElementById('title');
    const titleErrorMessage = document.querySelector('label[for="Title Error Message"]');
    
    if (titleInput.value.trim() === '') {

      titleErrorMessage.textContent = 'Title is required.';
      titleErrorMessage.removeAttribute('hidden');
      event.preventDefault();
    } else {

      titleErrorMessage.setAttribute('hidden', 'true');


    }
  }

//COMPLETED TASK
function toggleTaskCompletion(event) {

      const id = event.target.attributes.taskid.nodeValue
      const task = document.querySelector(`.x-task[data-id="${id}"]`)
      // Toggle our completed label accordingly
      let completed = task.attributes['data-checked'].nodeValue
      completed = completed === "false" ? "true" : "false"

      const payload = { completed }

      fetch(`/task/${id}`, {
        headers: {
          'Content-Type': "application/json"
        },
        method: "PATCH",
        body: JSON.stringify(payload)
      }).then(r => r.json()).then((r) => {
        // Update the task accordingly. 
        task.attributes['data-checked'].nodeValue = r.completed
      })
    }

  </script>